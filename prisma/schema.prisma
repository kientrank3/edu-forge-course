generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CourseLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum LessonType {
  VIDEO
  BLOG
  MIXED 
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  courses     Course[]
}

model Course {
  id              String     @id @default(uuid())
  title           String
  description     String?
  categoryId      String
  isPublished     Boolean    @default(false)
  category        Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  level           CourseLevel?
  ownerId         String    
  price           Float      @default(0.00)
  currency        String     @default("VND")
  thumbnailUrl    String?
  tags            String[]   
  promotionPrice  Float?
  isHasCertificate Boolean    @default(false)
  chapters        Chapter[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  totalLessons   Int        @default(0)
  learningOutcomes String[]  
  requirements     String[]  
  targetAudience   String?   
}

model Chapter {
  id              String     @id @default(uuid())
  title           String
  description     String?
  order           Int        @default(0)
  courseId        String
  isPublished     Boolean    @default(false)
  course          Course     @relation(fields: [courseId], references: [id], onDelete: Cascade)
  lessons         Lesson[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Lesson {
  id              String     @id @default(uuid())
  title           String
  content         String?    // Nội dung blog
  type            LessonType @default(MIXED) // Loại bài học (VIDEO, BLOG, hoặc MIXED)
  videoUrl        String?    // Đường dẫn video (nếu có)
  order           Int        @default(0)
  chapterId       String
  isPublished     Boolean    @default(false)
  isFreePreview   Boolean    @default(false) // Cho phép xem miễn phí bài học này
  chapter         Chapter    @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}
